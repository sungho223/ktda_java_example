package com.ktdsuniversity.edu.array;

import java.util.Arrays;

public class SortArray {

	public static void main(String[] args) {
		
//		int[] numbers = new int[6];
		int[] numbers = { 56, 12, 58, 80, 2, 1 };
		
		// 반복하지 않고 배열을 출력하기
		// [56, 12, 58, 80, 1, 2]
		System.out.println( Arrays.toString(numbers) );
		
		// 아이템 개수만큼 반복
		for (int i = 0; i < numbers.length; i++) {
			// 대/소 비교를 위한 반복
			for (int j = 0; j < numbers.length - 1 - i; j++) {
				System.out.println(numbers[j] + " > " + numbers[j + 1]);
				if (numbers[j] > numbers[j + 1]) {
					int temp = numbers[j];
					numbers[j] = numbers[j + 1];
					numbers[j + 1] = temp;
				}
			}
			System.out.println( i + " => " + Arrays.toString(numbers) );
		}
		
		System.out.println( Arrays.toString(numbers) );
		
		/*
		 * 시작 [56, 12, 58, 80, 1, 2]
		 * 1 반복 0, 1 비교 56 > 12
		 *       56과 12의 자리를 교환
		 *   결과 [12, 56, 58, 80, 1, 2]
		 * 2 반복       1,  2 비교 56 > 58
		 *       아무런 일도 하지 않는다.
		 *   결과 [12, 56, 58, 80, 1, 2]
		 * 3 반복           2,  3 비교 58 > 80
		 *       아무런 일도 하지 않는다.
		 *   결과 [12, 56, 58, 80,  1, 2]
		 * 4 반복               3 , 4 비교 80 > 1
		 *       80과 1의 자리를 교환
		 *   결과 [12, 56, 58, 1, 80, 2]
		 * 5 반복                  4, 5 비교 80 > 2
		 *       80과 2의 자리를 교환
		 *   결과 [12, 56, 58, 1, 2, 80]
		 * 6 반복 [12, 56, 58, 1, 2, 80]
		 *        0 , 1 비교 12 > 56
		 *       아무런 일도 하지 않는다.
		 *   결과 [12, 56, 58, 1, 2, 80]
		 * 7 반복 [12, 56, 58, 1, 2, 80]
		 *             1, 2 비교 56 > 58
		 *       아무런 일도 하지 않는다.
		 *   결과 [12, 56, 58, 1, 2, 80]
		 * 8 반복 [12, 56, 58, 1, 2, 80]
		 *                 2, 3 비교 58 > 1
		 *       58과 1의 자리를 교환
		 *   결과 [12, 56, 1, 58, 2, 80]
		 * 9 반복 [12, 56, 1, 58, 2, 80]
		 *                    3, 4 비교 58 > 2
		 *       58과 2의 자리를 교환
		 *   결과 [12, 56, 1, 2, 58, 80]
		 *10 반복 [12, 56, 1, 2, 58, 80]
		 *                      4,  5 비교 58 > 80
		 *       아무런 일도 하지 않는다
		 *   결과 [12, 56, 1, 2, 58, 80]
		 *       [12, 56, 1, 2, 58, 80]
		 *       [12, 1, 56, 2, 58, 80]
		 *       [12, 1, 2, 56, 58, 80]
		 *       [12, 1, 2, 56, 58, 80]
		 *       [1, 12, 2, 56, 58, 80]
		 *       [1, 2, 12, 56, 58, 80]
		 */
		
		/*
		 * [56, 12, 58, 80, 1, 2]
		 * [12, 56, 58, 80, 1, 2]
		 * [12, 56, 58, 1, 80, 2]
		 * [12, 56, 58, 1, 2, 80]
		 * 
		 * [12, 56, 1, 58, 2, 80]
		 * [12, 56, 1, 2, 58, 80]
		 * 
		 * [12, 1, 56, 2, 58, 80]
		 * [12, 1, 2, 56, 58, 80]
		 * 
		 * [1, 12, 2, 56, 58, 80]
		 * [1, 2, 12, 56, 58, 80]
		 */
		
		// [1, 2, 12, 56, 58, 80]
		
		
	}
	
}